
protopipes {

  datastore {

    map = protopipes.store.instances.InMemDataMap

    multimap = protopipes.store.instances.InMemDataMultiMap

    idmap = protopipes.store.instances.InMemIdDataMap

    queue = protopipes.store.instances.InMemDataQueue

    list = protopipes.store.instances.InMemLinearStore

    datastream-buffer = protopipes.store.instances.InMemDataQueue

  }

  platform {

    mapper-platform = protopipes.platforms.instances.thinactors.ThinActorMapperPlatform

    reducer-platform = protopipes.platforms.instances.thinactors.ThinActorReducerPlatform

    pairwise-platform = protopipes.platforms.instances.thinactors.ThinActorPairwiseComposerPlatform

    connector = protopipes.connectors.instances.IncrTrackerJobQueue

    provenance-curator = protopipes.curators.StandardProvenanceCurator

    error-curator = protopipes.curators.StandardErrorCurator

  }

  _bigactor {

    numberOfWorkers = 8

    maxSecondsOnInput = 5

    akka.actor.deployment {

      /super/actorOne {}

      /super/actorTwo {}

    }

  }

  count-step {

    platform {

      provenance-curator = protopipes.curators.IdleProvenanceCurator

    }

    kafka {

      consumer {
        bootstrap.servers = "localhost:9092"
        key.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
      }

      producer {
        bootstrap.servers = "localhost:9092"
      }
    }

  }

}

