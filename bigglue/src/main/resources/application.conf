
bigglue {

  datastore {

    map = protopipes.store.instances.InMemDataMap
    //map = bigglue.store.instances.solr.SolrDataMap

    multimap = protopipes.store.instances.InMemDataMultiMap
    //multimap = bigglue.store.instances.solr.SolrMultiMap

    idmap = bigglue.store.instances.InMemIdDataMap

    queue = bigglue.store.instances.InMemDataQueue

    list = bigglue.store.instances.InMemLinearStore

    datastream-buffer = bigglue.store.instances.InMemDataQueue

  }

  platform {

    mapper-platform = bigglue.platforms.instances.bigactors.BigActorMapperPlatform

    reducer-platform = bigglue.platforms.instances.bigactors.BigActorReducerPlatform

    pairwise-platform = bigglue.platforms.instances.bigactors.BigActorPairwiseComposerPlatform

    connector = bigglue.connectors.instances.WaitingConnector

    provenance-curator = bigglue.curators.StandardProvenanceCurator

    error-curator = bigglue.curators.StandardErrorCurator

  }

  waitingConnector {

    innerConnector = bigglue.connectors.instances.IncrTrackerJobQueue

    onlyUnique = true

    delayInSeconds = 2

    intervalsInSeconds = 2

    amountPerInterval = 0

  }


  _bigactor {

    numberOfWorkers = 8

    maxSecondsOnInput = 5

    akka.actor.deployment {

      /super/actorOne {}

      /super/actorTwo {}

    }

  }

  _solr {
    solrLocation = "localhost:8983"
    solrServerLocation = "/Users/chanceroberts/Desktop/CS Notes/Research/solr-6.6.0/server"
    solrCoreInformation = "/Users/chanceroberts/Desktop/CS Notes/Research/solr-6.6.0/server/solr/configsets/data_driven_schema_configs/conf"
    isCloud = false
    hasSchema = false
  }

  count-step {

    platform {

      provenance-curator = bigglue.curators.IdleProvenanceCurator

    }

    kafka {

      consumer {
        bootstrap.servers = "localhost:9092"
        key.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
      }

      producer {
        bootstrap.servers = "localhost:9092"
      }
    }

  }

}

